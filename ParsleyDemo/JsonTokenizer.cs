//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections.Generic;
namespace ParsleyDemo {
    
    internal class JsonTokenizer : TableTokenizer {
        internal static DfaEntry[] DfaTable = new DfaEntry[] {
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '-',
                                        '-'}, 1),
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '0'}, 2),
                            new DfaTransitionEntry(new char[] {
                                        '1',
                                        '9'}, 8),
                            new DfaTransitionEntry(new char[] {
                                        '\"',
                                        '\"'}, 9),
                            new DfaTransitionEntry(new char[] {
                                        't',
                                        't'}, 12),
                            new DfaTransitionEntry(new char[] {
                                        'f',
                                        'f'}, 16),
                            new DfaTransitionEntry(new char[] {
                                        'n',
                                        'n'}, 21),
                            new DfaTransitionEntry(new char[] {
                                        '[',
                                        '['}, 25),
                            new DfaTransitionEntry(new char[] {
                                        ']',
                                        ']'}, 26),
                            new DfaTransitionEntry(new char[] {
                                        '{',
                                        '{'}, 27),
                            new DfaTransitionEntry(new char[] {
                                        '}',
                                        '}'}, 28),
                            new DfaTransitionEntry(new char[] {
                                        ':',
                                        ':'}, 29),
                            new DfaTransitionEntry(new char[] {
                                        ',',
                                        ','}, 30),
                            new DfaTransitionEntry(new char[] {
                                        '\t',
                                        '\r',
                                        ' ',
                                        ' '}, 31)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '0'}, 2),
                            new DfaTransitionEntry(new char[] {
                                        '1',
                                        '9'}, 8)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '.',
                                        '.'}, 3),
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 4),
                            new DfaTransitionEntry(new char[] {
                                        'E',
                                        'E',
                                        'e',
                                        'e'}, 5)}, 14),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 4)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 4),
                            new DfaTransitionEntry(new char[] {
                                        'E',
                                        'E',
                                        'e',
                                        'e'}, 5)}, 14),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '+',
                                        '+',
                                        '-',
                                        '-'}, 6),
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 7)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 7)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 7)}, 14),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '0',
                                        '9'}, 8),
                            new DfaTransitionEntry(new char[] {
                                        '.',
                                        '.'}, 3),
                            new DfaTransitionEntry(new char[] {
                                        'E',
                                        'E',
                                        'e',
                                        'e'}, 5)}, 14),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '\0',
                                        '!',
                                        '#',
                                        '[',
                                        ']',
                                        '￿'}, 9),
                            new DfaTransitionEntry(new char[] {
                                        '\\',
                                        '\\'}, 10),
                            new DfaTransitionEntry(new char[] {
                                        '\"',
                                        '\"'}, 11)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '\0',
                                        '￿'}, 9)}, -1),
                new DfaEntry(new DfaTransitionEntry[0], 12),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'r',
                                        'r'}, 13)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'u',
                                        'u'}, 14)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'e',
                                        'e'}, 15)}, -1),
                new DfaEntry(new DfaTransitionEntry[0], 16),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'a',
                                        'a'}, 17)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'l',
                                        'l'}, 18)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        's',
                                        's'}, 19)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'e',
                                        'e'}, 20)}, -1),
                new DfaEntry(new DfaTransitionEntry[0], 17),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'u',
                                        'u'}, 22)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'l',
                                        'l'}, 23)}, -1),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        'l',
                                        'l'}, 24)}, -1),
                new DfaEntry(new DfaTransitionEntry[0], 15),
                new DfaEntry(new DfaTransitionEntry[0], 21),
                new DfaEntry(new DfaTransitionEntry[0], 22),
                new DfaEntry(new DfaTransitionEntry[0], 18),
                new DfaEntry(new DfaTransitionEntry[0], 19),
                new DfaEntry(new DfaTransitionEntry[0], 13),
                new DfaEntry(new DfaTransitionEntry[0], 20),
                new DfaEntry(new DfaTransitionEntry[] {
                            new DfaTransitionEntry(new char[] {
                                        '\t',
                                        '\r',
                                        ' ',
                                        ' '}, 31)}, 23)};
        internal static int[] NodeFlags = new int[] {
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1};
        internal static string[] BlockEnds = new string[] {
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null};
        public JsonTokenizer(IEnumerable<char> input) : 
                base(JsonTokenizer.DfaTable, JsonTokenizer.BlockEnds, JsonTokenizer.NodeFlags, input) {
        }
        public const int @string = 12;
        public const int colon = 13;
        public const int number = 14;
        public const int @null = 15;
        public const int @true = 16;
        public const int @false = 17;
        public const int lbrace = 18;
        public const int rbrace = 19;
        public const int comma = 20;
        public const int lbracket = 21;
        public const int rbracket = 22;
        public const int whitespace = 23;
    }
}
