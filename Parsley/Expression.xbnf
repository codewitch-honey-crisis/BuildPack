Expression<type="int",start>= Term "+" Expression | Term => {
	if(Length==1)
		return Term1;
	if(SymbolId2==add)
		return Term1 + Expression3;
	else
		return Term1 - Expression3;
}
Term<type="int"> = Term "*" Factor | Factor => {
	if(Length==1)
		return Factor1;
	if(SymbolId2==mul)
		return Term1 * Factor3;
	else
		return Term1 / Factor3;
}
Factor<type="int"> = "(" Expression ")" | integer | identifier => {
	if(Length==1) {
		if(SymbolId1==integer)
			return integer1;
		else {
			if(null==state)
				throw new InvalidOperationException("Variables were not defined.");
			return ((IDictionary<string,int>)state)[identifier1];
		}
	}
	return Expression2;
}
integer='[0-9]+';
identifier='[A-Z_a-z][0-9A-Z_a-z]*';
whitespace<hidden>='\s+';
add="+";
sub="-";
mul="*";
div="/";
lparen="(";
rparen=")";